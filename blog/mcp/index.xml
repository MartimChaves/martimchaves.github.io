<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MCP on low throughput thought stream</title><link>https://martimchaves.github.io/blog/mcp/</link><description>Recent content in MCP on low throughput thought stream</description><generator>Hugo</generator><language>en-US</language><copyright>Copyright Â© 2025, Martim Chaves.</copyright><lastBuildDate>Tue, 19 Aug 2025 11:22:13 +0000</lastBuildDate><atom:link href="https://martimchaves.github.io/blog/mcp/index.xml" rel="self" type="application/rss+xml"/><item><title>thoughts on llm evals</title><link>https://martimchaves.github.io/thoughts-on-llm-evals/</link><pubDate>Tue, 19 Aug 2025 11:22:13 +0000</pubDate><guid>https://martimchaves.github.io/thoughts-on-llm-evals/</guid><description>&lt;p>MCP stans for Model Context Protocol. It&amp;rsquo;s a protocol that has been developed to standardize tool use.&lt;/p>
&lt;p>Some folks started using LLMs to produce json that could be parsed to run a function - i.e. a tool. Say you built a function that looks like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">hello_greeting&lt;/span>(name: str):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Hello, &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>name&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You would tell your LLM, something like:&lt;/p>
&lt;pre tabindex="0">&lt;code>Assistant: If you want to run a greeting tool, you can run the following tool:
Tool name: &amp;#39;hello_greeting&amp;#39;
Arguments:
 - name: string
&lt;/code>&lt;/pre>&lt;p>And then, you hoped that, if there ever was a need to run this tool, the LLM would output something like this:&lt;/p></description></item></channel></rss>